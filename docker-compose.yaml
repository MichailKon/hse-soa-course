version: '3'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user-service
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=users
      - JWT_SECRET=JWT_SECRET
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  post-service:
    build: ./post-service
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=posts
      - GRPC_PORT=50051
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - USER_SERVICE_URL=http://user-service:8081
      - POST_SERVICE_URL=post-service:50051
      - JWT_SECRET=JWT_SECRET
      - PORT=8080
    depends_on:
      - user-service
      - post-service
    networks:
      - app-network

networks:
  app-network:

volumes:
  postgres_data:
